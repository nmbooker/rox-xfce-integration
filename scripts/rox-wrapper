#! /usr/bin/env perl

# A simple wrapper for ROX that decides whether to use -U or not.

use warnings;
use strict;
use diagnostics;

my $options = get_options();

my @cmd = ('rox');
if (looks_like_uri($options->{uri})) {
    push @cmd, '-U';
}
push @cmd, $options->{uri};
print STDERR "@cmd\n";
unless (exec @cmd) {
    print STDERR "couldn't exec (@cmd): $!\n";
    exit 2;
}

sub looks_like_uri {
    my $string = shift;
    # Looks for something that looks like SCHEME:// at the beginning
    return ($string =~ qr|^[A-Za-z0-9+-]+://|);
}

sub get_options {
    use File::Basename qw(basename);
    use Getopt::Long;
    use Pod::Usage;

    my $prog = basename($0);  # can be used in error messages

    my $options = {
        help => 0,
        man => 0,
        # add further options here with their default values
        uri => undef,
    };

    Getopt::Long::Configure(qw{gnu_getopt});
    my $parsed_ok = GetOptions(
        'h|help'    =>  \$options->{help},
        'man'       =>  \$options->{man},
        # specify further options here with references to their values in the $options hashref
    );

    pod2usage(-exitval => 2) unless $parsed_ok;

    # Note -output defaults to *STDOUT if -exitval is 0 or 1.
    # See the documentation for Pod::Usage under DESCRIPTION.
    pod2usage(-exitval => 1, -verbose => 1) if $options->{help};
    pod2usage(-exitval => 1, -verbose => 2) if $options->{man};

    # Process remaining arguments from @ARGV here, adding results
    # to $options.

    $options->{uri} = $ARGV[0];

    return $options;
}

__END__

=head1 NAME

rox-wrapper - wrapper for rox

=head1 SYNOPSIS

rox-wrapper [options] uri_or_path

 Options:
    -h, --help              brief help message
    --man                   full documentation

 Arguments:
    uri_or_path             the URI or filesystem path to be opened

=head1 OPTIONS

=over 8

=item B<--help> or B<-h>

Print a brief help message and exit.

=item B<--man>

Print the manual page and exit.


=back

=head1 DESCRIPTION

B<rox-wrapper> will launch B<rox> with the single uri_or_path passed into
the command line, including the "-U" switch if it looks like a URI,
otherwise excluding it.

=head1 LIMITATIONS

Detection of whether the argument is a URI or a path is done using a very
naive heuristic which may give incorrect results in some, hopefully
unusual, cases.
If bugs relating to incorrect URI detection are found, then the
looks_like_uri() subroutine can be adjusted to work this out more
accurately.

Another possible limitation is that only one URI or path is accepted on
the command line, however I think it would be unusual for tools like
Thunar, gigolo, exo-open or gvfs-open, which this script is aimed at,
to ask for anything more.  If this assumption is wrong, please file a bug
or, even better, contribute a patch.

=head1 LICENSE
(the MIT License, http://opensource.org/licenses/MIT)

Copyright (c) 2012 Nicholas Martin Booker

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

=cut
